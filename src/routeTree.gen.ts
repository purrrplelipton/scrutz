/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CampaignsIndexRouteImport } from './routes/campaigns/index'
import { Route as CampaignsNewRouteImport } from './routes/campaigns/new'
import { Route as CampaignsIdIndexRouteImport } from './routes/campaigns/$id/index'
import { Route as CampaignsIdEditRouteImport } from './routes/campaigns/$id/edit'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CampaignsIndexRoute = CampaignsIndexRouteImport.update({
  id: '/campaigns/',
  path: '/campaigns/',
  getParentRoute: () => rootRouteImport,
} as any)
const CampaignsNewRoute = CampaignsNewRouteImport.update({
  id: '/campaigns/new',
  path: '/campaigns/new',
  getParentRoute: () => rootRouteImport,
} as any)
const CampaignsIdIndexRoute = CampaignsIdIndexRouteImport.update({
  id: '/campaigns/$id/',
  path: '/campaigns/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const CampaignsIdEditRoute = CampaignsIdEditRouteImport.update({
  id: '/campaigns/$id/edit',
  path: '/campaigns/$id/edit',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/campaigns/new': typeof CampaignsNewRoute
  '/campaigns': typeof CampaignsIndexRoute
  '/campaigns/$id/edit': typeof CampaignsIdEditRoute
  '/campaigns/$id': typeof CampaignsIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/campaigns/new': typeof CampaignsNewRoute
  '/campaigns': typeof CampaignsIndexRoute
  '/campaigns/$id/edit': typeof CampaignsIdEditRoute
  '/campaigns/$id': typeof CampaignsIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/campaigns/new': typeof CampaignsNewRoute
  '/campaigns/': typeof CampaignsIndexRoute
  '/campaigns/$id/edit': typeof CampaignsIdEditRoute
  '/campaigns/$id/': typeof CampaignsIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/campaigns/new'
    | '/campaigns'
    | '/campaigns/$id/edit'
    | '/campaigns/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/campaigns/new'
    | '/campaigns'
    | '/campaigns/$id/edit'
    | '/campaigns/$id'
  id:
    | '__root__'
    | '/'
    | '/campaigns/new'
    | '/campaigns/'
    | '/campaigns/$id/edit'
    | '/campaigns/$id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CampaignsNewRoute: typeof CampaignsNewRoute
  CampaignsIndexRoute: typeof CampaignsIndexRoute
  CampaignsIdEditRoute: typeof CampaignsIdEditRoute
  CampaignsIdIndexRoute: typeof CampaignsIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/campaigns/': {
      id: '/campaigns/'
      path: '/campaigns'
      fullPath: '/campaigns'
      preLoaderRoute: typeof CampaignsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/campaigns/new': {
      id: '/campaigns/new'
      path: '/campaigns/new'
      fullPath: '/campaigns/new'
      preLoaderRoute: typeof CampaignsNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/campaigns/$id/': {
      id: '/campaigns/$id/'
      path: '/campaigns/$id'
      fullPath: '/campaigns/$id'
      preLoaderRoute: typeof CampaignsIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/campaigns/$id/edit': {
      id: '/campaigns/$id/edit'
      path: '/campaigns/$id/edit'
      fullPath: '/campaigns/$id/edit'
      preLoaderRoute: typeof CampaignsIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CampaignsNewRoute: CampaignsNewRoute,
  CampaignsIndexRoute: CampaignsIndexRoute,
  CampaignsIdEditRoute: CampaignsIdEditRoute,
  CampaignsIdIndexRoute: CampaignsIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
